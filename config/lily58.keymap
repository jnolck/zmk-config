/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&none           &kp N1  &kp N2  &kp N3    &kp N4          &kp N5                            &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &none
&lt 3 TAB       &kp Q   &kp W   &kp E     &kp R           &kp T                             &kp Y   &kp U     &kp I      &kp O    &kp P     &kp BACKSPACE
&sk LEFT_SHIFT  &kp A   &kp S   &kp D     &kp F           &kp G                             &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&none           &kp Z   &kp X   &kp C     &kp V           &kp B   &none           &kp RBKT  &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &none
                                &kp LALT  &sk LEFT_SHIFT  &sl 2   &lt 1 ESCAPE    &kp RET   &mo 2   &kp BSPC  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4                         &trans          &trans      &trans         &trans           &trans             &trans
&none       &none           &none             &kp C_PAUSE       &kp SCROLLLOCK     &kp PRINTSCREEN                      &kp HOME        &kp PG_UP   &kp PAGE_DOWN  &kp END          &none              &trans
&none       &sk LEFT_SHIFT  &sk LEFT_GUI      &sk LEFT_ALT      &sk LEFT_CONTROL   &kp CAPSLOCK                         &kp LEFT_ARROW  &kp DOWN    &kp UP_ARROW   &kp RIGHT        &none              &none
&trans      &none           &sk LS(LEFT_GUI)  &kp K_COPY        &kp K_PASTE        &kp K_CUT          &trans    &trans  &kp INS         &kp DELETE  &kp C_MUTE     &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &none
                                              &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans    &trans  &trans          &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans     &trans         &trans            &trans             &trans                       &trans     &trans      &trans                &trans                 &trans       &trans
&none   &kp GRAVE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &none                        &kp EXCL   &kp PIPE    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT  &trans
&none   &kp AMPS   &kp MINUS      &kp PLUS          &kp EQUAL          &kp POUND                    &kp COLON  &kp SEMI    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT       &trans
&none   &kp CARET  &kp SLASH      &kp ASTERISK      &kp BACKSLASH      &kp UNDER  &trans    &trans  &kp TILDE  &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QMARK    &none
                                  &trans            &trans             &trans     &trans    &trans  &trans     &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                          &trans      &trans           &trans           &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                        &trans  &trans  &trans  &trans    &kp KP_ENTER  &kp PERIOD  &kp KP_NUMBER_0  &trans
            >;
        };
    };
};
